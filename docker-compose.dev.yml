services:
  postgres:
    container_name: postgres
    image: "postgres:15.2"
    environment:
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      POSTGRES_DB: ${PG_DB}
      PGDATA: "/data/postgres"
    volumes:
      - postgres_data:/data/postgres
    restart: "unless-stopped"
    ports:
      - 6432:5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
  bot:
    build:
      context: my_tickets_bot/bot
    container_name: my-tickets-bot
    env_file:
      - .env
    volumes:
      - ./my_tickets_bot/bot:/app/bot
      - ./my_tickets_bot/bot/migrations:/app/migrations
    depends_on:
      postgres:
        condition: service_healthy
  backend:
    build:
      context: my_tickets_bot/backend
    env_file: .env
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - ${API_IP}:8080
    container_name: my-tickets-backend
volumes:
  postgres_data:
    driver: local